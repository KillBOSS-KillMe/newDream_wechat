/*
 * @Author: luow 
 * @Date: 2019-10-29 10:41:00 
 * @Last Modified by: luow
 * @Last Modified time: 2019-11-06 20:40:56
 */
// customData = {}  // 自定义数据
// customFunction ()　{}  // 自定义方法
// onLoad () {}  // 在Page和Component共用的生命周期函数
// onShow () {}  // 只在Page中存在的页面生命周期函数
// config = {};  // 只在Page实例中存在的配置数据，对应于原生的page.json文件
// data = {};  // 页面所需数据均需在这里声明，可用于模板数据绑定
// components = {};  // 声明页面中所引用的组件，或声明组件中所引用的子组件
// mixins = [];  // 声明页面所引用的Mixin实例
// computed = {};  // 声明计算属性（详见后文介绍）
// watch = {};  // 声明数据watcher（详见后文介绍）
// methods = {};  // 声明页面wxml中标签的事件处理函数。注意，此处只用于声明页面wxml中标签的bind、catch事件，自定义方法需以自定义方法的方式声明
// 普通自定义方法在methods对象外声明，与methods平级
// events = {};  // 声明组件之间的事件处理函数
//props  {传值}  在WePY中属于  父子组件之间  传值的一种机制

// 页面跳转，传参写法
// this.$redirect('./page2', {a: 1, b: 2})
// this.$redirect({
//   url: './pages?a=1&b=2'
// });
// this.$navigate(url)

// 阴影边框
// box-shadow: #f1fefb 1rpx 1rpx 10rpx 5rpx;

// flexflexflexflexflexflexflexflex
// display: flex;
// align-items: center;
// justify-content: space-between;
// 竖向
// display: flex;
// align-items: center;
// justify-content: space-between;
// flex-direction: column;
// 换行
// display: flex;
// align-items: center;
// justify-content: space-between;
// flex-direction: row;
// flex-wrap: wrap;



// 居右
// flex-direction:row;
// justify-content:flex-end

// vertical-align:middle;

// overflow:hidden;
// text-overflow:ellipsis;
// white-space:nowrap;

// 自动换行
// word-break:break-all;

// overflow:hidden;
// text-overflow:ellipsis;
// white-space:nowrap;


<script>
import wepy from 'wepy';
import 'wepy-async-function';

import { setStore } from 'wepy-redux';
import configStore from './store';

const store = configStore();
setStore(store);

export default class extends wepy.app {
  config = {
    pages: [
      // 首页模块
      'pages/index', // 首页

      // 我知道模块
      'pages/IKnow', // 我知道
      'pages/IKnowType', // 分类-我知道
      'pages/IKnowSignUp', // 报名--我知道
      
      // 新影像模块
      'pages/newImage', // 新影像
      'pages/newImageType', // 分类-新影像
      'pages/newImageSignUp', // 报名--新影像
      
      // 个人中心模块
      'pages/user', // 我的
      'pages/userLikeList', // 点赞列表
      'pages/userCommentList', // 评论列表
      'pages/userSignUp', // 报名情况

      // 详情部分
      'pages/detailsText', // 文字详情
      'pages/detailPhoto', // 图片详情
      'pages/detailsVideo', // 视频详情
    ],
    permission: {
      'scope.userLocation': {
        desc: '你的位置信息将用于小程序位置接口的效果展示'
      }
    },
    window: {
      backgroundTextStyle: 'light',
      navigationBarBackgroundColor: '#fff',
      navigationBarTitleText: 'WeChat',
      navigationBarTextStyle: 'black'
    }
  };

  globalData = {
    userInfo: {},
    // 接口请求路径
    requestUrl: 'http://www.silk-road-dreams.com/api',
    // 图片路径
    requestImgUrl: 'http://www.silk-road-dreams.com/uploads/',
    mapKey: 'GCABZ-J4G64-2WKUX-DNQMK-MVCGK-OSFD4',
    apikey: '123456',
    token: '',
    isTourist: false, // 是否是游客
    cityGather: '',  // 城市集合
  };

  constructor() {
    super();
    this.use('requestfix');
  }

  onLaunch() {
    this.testAsync();
  }
  // 获取Token
  getToken() {
    wx.login({
      success: res => {
        if (res.code) {
          console.log(res.code)
          wx.request({
            url: `${this.globalData.requestUrl}/auth/get_token`,
            method: 'POST',
            header: {
              apikey: this.globalData.apikey
            },
            data: {
              code: res.code
            },
            success: data => {
              wx.hideToast()
              data = this.$parent.null2str(data)
              if (data.data.code == '8888') {
                let token = `${data.data.msg.token_type} ${data.data.msg.token}`
                this.$parent.globalData.token = token
              }
            }
          })
        }
      }
    })
  }
  // 拨打电话
  runCall(phone) {
    wx.makePhoneCall({
      phoneNumber: phone
    })
  }
  sleep(s) {
    return new Promise((resolve, reject) => {
      setTimeout(() => {
        resolve('promise resolved');
      }, s * 1000);
    });
  }
  // 点击图片放大，长按后可操作
  shareQRCodeImg(e) {
    let url =  e.currentTarget.dataset.imgurl
    wx.previewImage({
      current: [url], // 当前显示图片的http链接   
      urls: [url] // 需要预览的图片http链接列表   
    })
  }
  // 删除照片
  deleImg(that, e) {
    var idx = e.currentTarget.dataset.idx
    var imgArr = that.data.imgArr || []
    imgArr.splice(idx, 1)
    that.setData({
      imgArr
    })
  }
  // 上传图片
  uploadImg(that) {
    var self = this
    wx.chooseImage({
      success: function (res) {
        wx.showToast({
          title: '图片上传中',
          icon: 'loading'
        });
        var imgArr = that.data.imgArr || [] // 放图片的数组
        var imgLength = that.data.imgLength || 9 //默认上传9张图片
        if (imgArr.length + res.tempFiles.length > imgLength) {
          wx.showToast({
            title: `最多上传${imgLength}张图片`,
            icon: 'none'
          })
          return false
        }
        Promise.all(res.tempFiles.map(item => {
          return new Promise((resolve, reject) => {
            wx.uploadFile({
              url: `${self.globalData.requestUrl}/work/upload_file`,
              filePath: item.path,
              name: 'photo',
              success(res) {
                resolve({
                  path: JSON.parse(res.data).data
                })
              }
            })
          })
        })).then(e => {
          wx.hideToast();
          that.setData({
            imgArr: imgArr.concat(e)
          })
        }).catch(err => console.log(err))
      },
    })
  }
  /**
  * 时间戳转时间
  */
  transformTime(timestamp = +new Date()) {
    if (timestamp) {
      var time = new Date(timestamp);
      var y = time.getFullYear(); //getFullYear方法以四位数字返回年份
      var M = time.getMonth() + 1; // getMonth方法从 Date 对象返回月份 (0 ~ 11)，返回结果需要手动加一
      var d = time.getDate(); // getDate方法从 Date 对象返回一个月中的某一天 (1 ~ 31)
      var h = time.getHours(); // getHours方法返回 Date 对象的小时 (0 ~ 23)
      var m = time.getMinutes(); // getMinutes方法返回 Date 对象的分钟 (0 ~ 59)
      var s = time.getSeconds(); // getSeconds方法返回 Date 对象的秒数 (0 ~ 59)
      return y + '-' + M + '-' + d + ' ' + h + ':' + m + ':' + s;
    } else {
      return '';
    }
  }
  /**
  * null => ''
  * @param {*} data 要处理的数据
  */
  null2str(data) {
    for (let x in data) {
      if (data[x] === null) { // 如果是null 把直接内容转为 ''
        data[x] = ''
      } else {
        if (Array.isArray(data[x])) { // 是数组遍历数组 递归继续处理
          data[x] = data[x].map(z => {
            return this.null2str(z)
          })
        }
        if(typeof(data[x]) === 'object'){ // 是json 递归继续处理
          data[x] = this.null2str(data[x])
        }
      }
    }
    return data
  }
  async testAsync() {
    const data = await this.sleep(3);
    console.log(data);
  }

  getUserInfo(cb) {
    const that = this;
    if (this.globalData.userInfo) {
      return this.globalData.userInfo;
    }
    wepy.getUserInfo({
      success(res) {
        that.globalData.userInfo = res.userInfo;
        cb && cb(res.userInfo);
      }
    });
  }
  /**
   * 获取上一个月
   *
   * @date 格式为yyyy-mm-dd的日期，如：2014-01-25
   */
  getPreMonth(date) {
      var arr = date.split('-');
      var year = arr[0]; //获取当前日期的年份
      var month = arr[1]; //获取当前日期的月份
      var day = arr[2]; //获取当前日期的日
      var days = new Date(year, month, 0);
      days = days.getDate(); //获取当前日期中月的天数
      var year2 = year;
      var month2 = parseInt(month) - 1;
      if (month2 == 0) {
          year2 = parseInt(year2) - 1;
          month2 = 12;
      }
      var day2 = day;
      var days2 = new Date(year2, month2, 0);
      days2 = days2.getDate();
      if (day2 > days2) {
          day2 = days2;
      }
      if (month2 < 10) {
          month2 = '0' + month2;
      }
      // var t2 = year2 + '-' + month2 + '-' + day2;
      var t2 = year2 + '-' + month2 + '-' + 0;
      return t2;
  }
  
  /**
   * 获取下一个月
   *
   * @date 格式为yyyy-mm-dd的日期，如：2014-01-25
   */        
  getNextMonth(date) {
      var arr = date.split('-');
      var year = arr[0]; //获取当前日期的年份
      var month = arr[1]; //获取当前日期的月份
      var day = arr[2]; //获取当前日期的日
      var days = new Date(year, month, 0);
      days = days.getDate(); //获取当前日期中的月的天数
      var year2 = year;
      var month2 = parseInt(month) + 1;
      if (month2 == 13) {
          year2 = parseInt(year2) + 1;
          month2 = 1;
      }
      var day2 = day;
      var days2 = new Date(year2, month2, 0);
      days2 = days2.getDate();
      if (day2 > days2) {
          day2 = days2;
      }
      if (month2 < 10) {
          month2 = '0' + month2;
      }
  
      // var t2 = year2 + '-' + month2 + '-' + day2;
      var t2 = year2 + '-' + month2 + '-' + 0;
      return t2;
  }
}
</script>
<style lang="less">
// 取消按钮默认样式
button {
  position:relative;
  display:block;
  margin-left:auto;
  margin-right:auto;
  padding-left:14px;
  padding-right:14px;
  box-sizing:border-box;
  font-size:18px;
  text-align:center;
  text-decoration:none;
  line-height:2.55555556;
  border-radius:5px;
  -webkit-tap-highlight-color:transparent;
  overflow:hidden;
  color:#000000;
  background-color:transparent !important;
  padding: 0 !important;
  margin: 0 !important;
}
button::after {
  border: none;
}
#getUserInfo{
  position: fixed;
  top: 0;
  left: 0;
  bottom: 0;
  right: 0;
  opacity: 0;
  z-index: 999;
}
icon{
  display: flex;
  align-items: center;
  justify-content: center;
}
.container {
  height: 100%;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: space-between;
  box-sizing: border-box;
}
.sub{
  z-index: 999;
  position: fixed;
  left: 0;
  bottom: 0;
  width: 750rpx;
  height: 190rpx;
  background-color: #fff;
  display: flex;
  align-items: center;
  justify-content: center;
  view{
    width: 690rpx;
    height: 90rpx;
    color: #fff;
    font-size: 32rpx;
    font-weight: 600;
    border-radius: 10rpx;
    background-color: #F08200;
    display: flex;
    align-items: center;
    justify-content: center;
  }
  icon{
    font-size: 32rpx;
    margin-right: 20rpx;
    display: flex;
    align-items: center;
    justify-content: center;
  }
}
.maskCon {
  width: 100vw;
  height: 100vh;
  position: absolute;
  top: 0px;
  left: 0px;
  .showCon {
    display: flex;
    align-items: center;
    justify-content: space-around;
    flex-direction: column;
    background-color: #fff;
    border-radius: 10rpx;
    z-index: 999;
    position: fixed;
    margin: auto;
    left: 0;
    right: 0;
    top: 0;
    bottom: 0;
  }
  .name {
    font-size: 30rpx;
    font-weight: 600;
    color: #1f1f1f;
    display: flex;
    align-items: center;
    justify-content: center;
  }
  input {
    width: 280rpx;
    height: 80rpx;
    border-radius: 10rpx;
    border: 1rpx solid #dfdfdf;
    color: #1f1f1f;
    font-size: 28rpx;
    text-align: center;
  }
  .maskSub {
    width: 280rpx;
    height: 80rpx;
    border-radius: 10rpx;
    background-color: #f42652;
    color: #fff;
    font-size: 32rpx;
    font-weight: 600;
    display: flex;
    align-items: center;
    justify-content: center;
  }
  .mask {
    width: 100vw;
    height: 100vh;
    position: fixed;
    top: 0px;
    left: 0px;
    background: rgba(0, 0, 0, 0.8);
    z-index: 100;
  }
}
.commentDom{
  margin-top: 30rpx;
  width: 100%;
  height: auto;
  display: flex;
  align-items: center;
  justify-content: center;
  input{
    width: 600rpx;
    height: 30rpx;
    padding: 20rpx 0;
  }
  view{
    width: 90rpx;
    height: 70rpx;
    display: flex;
    align-items: center;
    justify-content: center;
    background-color: #F08200;
    color: #fff;
    font-size: 28rpx;
    font-weight: 600;
  }
}
.listNull{ 
  width: 100%; 
  display: flex; 
  align-items: center; 
  justify-content: center; 
  padding: 20rpx 0; 
  font-size: 25rpx; 
  // font-weight: 600; 
  color: #898989; 
 } 
// 多选框样式
  checkbox .wx-checkbox-input {
    border-radius: 50%; /* 圆角 */
    width: 40rpx; /* 背景的宽 */
    height: 40rpx; /* 背景的高 */
  }
  checkbox .wx-checkbox-input.wx-checkbox-input-checked {
    border: none;
    background: #fc6800;
  }
  checkbox .wx-checkbox-input.wx-checkbox-input-checked::before {
    border-radius: 50%; /* 圆角 */
    width: 40rpx; /* 选中后对勾大小，不要超过背景的尺寸 */
    height: 40rpx; /* 选中后对勾大小，不要超过背景的尺寸 */
    line-height: 40rpx;
    text-align: center;
    font-size: 40rpx; /* 对勾大小 30rpx */
    color: #fff; /* 对勾颜色 白色 */
    background: transparent;
    // transform:translate(-50%, -50%) scale(1);
    // -webkit-transform:translate(-50%, -50%) scale(1);
  }
  @font-face {font-family: "iconfont";
  src: url('//at.alicdn.com/t/font_1481024_k67jyeyi86l.eot?t=1572838846331'); /* IE9 */
  src: url('//at.alicdn.com/t/font_1481024_k67jyeyi86l.eot?t=1572838846331#iefix') format('embedded-opentype'), /* IE6-IE8 */
  url('data:application/x-font-woff2;charset=utf-8;base64,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') format('woff2'),
  url('//at.alicdn.com/t/font_1481024_k67jyeyi86l.woff?t=1572838846331') format('woff'),
  url('//at.alicdn.com/t/font_1481024_k67jyeyi86l.ttf?t=1572838846331') format('truetype'), /* chrome, firefox, opera, Safari, Android, iOS 4.2+ */
  url('//at.alicdn.com/t/font_1481024_k67jyeyi86l.svg?t=1572838846331#iconfont') format('svg'); /* iOS 4.1- */
}

.iconfont {
  font-family: "iconfont" !important;
  font-size: 16px;
  font-style: normal;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

.iconzhuanfa:before {
  content: "\e6aa";
}

.iconpinglun:before {
  content: "\e6ab";
}

.icondianzan:before {
  content: "\e6ac";
}

.icondonghua:before {
  content: "\e6ad";
}

.icondonghua1:before {
  content: "\e6ae";
}

.iconshouye:before {
  content: "\e6af";
}

.iconshouye1:before {
  content: "\e6b0";
}

.icontupian:before {
  content: "\e6b1";
}

.icontupian1:before {
  content: "\e6b2";
}

.iconwenzi:before {
  content: "\e6b3";
}

.iconwenzi1:before {
  content: "\e6b4";
}

.iconwode:before {
  content: "\e6b5";
}

.iconwode1:before {
  content: "\e6b6";
}

.iconyingshi:before {
  content: "\e6b7";
}

.iconyingshi1:before {
  content: "\e6b8";
}


</style>